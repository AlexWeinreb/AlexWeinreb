{
  "hash": "a1221ebf19473f5de5576b4a075edaf7",
  "result": {
    "markdown": "---\ntitle: \"Most studied worm neuronal genes\"\nauthor: \"Alexis Weinreb\"\ndate: \"2023-11-05\"\ncategories: [worm, R]\n---\n\n\n\nWhat genes are the most studied in worms? Wormbase's comprehensive curation can help us answer that.\n\n# Data download\n\nWe want to find how many publications are associated with each gene. Wormbase offers us several tools to that effect, we will use SimpleMine which is the easiest here. Other possibilities include WormMine or the REST API.\n\nSo, we open [SimpleMine](https://wormbase.org//tools/mine/simplemine.cgi), in Step 2 we select \"download results as a tab-delimited file\", in Step 3 we select \"Wormbase Gene ID\", \"Public Name\", \"Expr_pattern Tissue\" and \"Reference\". And in Step 4 we download \"all genes for this species\".\n\n## Data loading\n\nNow we read this data in R. We also rename the columns for names that are easier to work with. And if you look through the data, you may notice a number of genes do not have references associated, we need to ensure this is registered correctly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(tidyverse))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'forcats' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lubridate' was built under R version 4.3.2\n```\n:::\n\n```{.r .cell-code}\nsimplemine_results <- read_tsv(\"data/simplemine_results.txt\",\n                               col_types = \"ccccc\",\n                               na = \"N.A.\") |>\n  select(gene_id = `WormBase Gene ID`,\n         gene_name = `Public Name`,\n         expr_pattern = `Expr_pattern Tissue`,\n         references = Reference)\n\nsimplemine_results\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 49,541 × 4\n   gene_id        gene_name expr_pattern                              references\n   <chr>          <chr>     <chr>                                     <chr>     \n 1 WBGene00000001 aap-1     body wall musculature, hypodermis, intes… WBPaper00…\n 2 WBGene00000002 aat-1     excretory cell, excretory gland cell, go… WBPaper00…\n 3 WBGene00000003 aat-2     <NA>                                      WBPaper00…\n 4 WBGene00000004 aat-3     <NA>                                      WBPaper00…\n 5 WBGene00000005 aat-4     <NA>                                      WBPaper00…\n 6 WBGene00000006 aat-5     <NA>                                      WBPaper00…\n 7 WBGene00000007 aat-6     intestine                                 WBPaper00…\n 8 WBGene00000008 aat-7     <NA>                                      WBPaper00…\n 9 WBGene00000009 aat-8     <NA>                                      WBPaper00…\n10 WBGene00000010 aat-9     body wall musculature, neuron             WBPaper00…\n# ℹ 49,531 more rows\n```\n:::\n:::\n\n\n\nSo w have one row per gene, let's make it one row per reference and count the number of rows for a given gene.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npapers_per_gene <- simplemine_results |>\n  separate_rows(references, sep = \",\") |>\n  filter(!is.na(references)) |>\n  group_by(gene_id, gene_name) |>\n  summarize(nb_papers = n(),\n            .groups = \"drop\") |>\n  arrange(desc(nb_papers))\n\npapers_per_gene\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 18,369 × 3\n   gene_id        gene_name nb_papers\n   <chr>          <chr>         <int>\n 1 WBGene00000912 daf-16         1675\n 2 WBGene00000898 daf-2          1543\n 3 WBGene00001609 glp-1           838\n 4 WBGene00000417 ced-3           724\n 5 WBGene00004804 skn-1           695\n 6 WBGene00003001 lin-12          685\n 7 WBGene00000090 age-1           595\n 8 WBGene00002335 let-60          566\n 9 WBGene00006789 unc-54          562\n10 WBGene00000418 ced-4           502\n# ℹ 18,359 more rows\n```\n:::\n:::\n\n\nPerhaps unsurprisingly, the 2 most studied genes in worms are *daf-2* and *daf-16*. Then we see a lot more genes that are quite well-studied too. Let's look at the distribution to see if there are distinct classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(papers_per_gene) +\n  geom_histogram(aes(x=nb_papers), bins = 100, color = \"white\") +\n  theme_classic() +\n  scale_x_continuous(n.breaks = 10) +\n  scale_y_continuous(trans = \"log1p\", breaks = c(0,3,10,30,100,300,1000,3000,10000)) +\n  xlab(\"Number of papers\") + ylab(\"Number of genes\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nSo the categories we could distinguish are:\n* genes with more than 250 papers, that appeared at the top of the list\n* genes with many papers (let's take > 20)\n* genes with few or no papers\n\nWe can visualize the cutoffs on the histogram:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(papers_per_gene) +\n  geom_histogram(aes(x=nb_papers), bins = 500) +\n  theme_classic() +\n  scale_x_continuous(n.breaks = 10) +\n  scale_y_continuous(trans = \"log1p\", breaks = c(0,3,10,30,100,300,1000,3000,10000)) +\n  xlab(\"Number of papers\") + ylab(\"Number of genes\") +\n  geom_vline(aes(xintercept = 20), color = \"red3\") +\n  geom_vline(aes(xintercept = 250), color = \"green4\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\nWe can look at the number of genes in each category:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npapers_per_gene |>\n  mutate(category = cut(nb_papers,\n                        breaks = c(0,20,250,Inf),\n                        labels = c(\"lowly\",\"medium\",\"highly\"))) |> \n  group_by(category) |>\n  summarize(nb_genes = n(),\n            .groups = \"drop\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  category nb_genes\n  <fct>       <int>\n1 lowly       17002\n2 medium       1308\n3 highly         59\n```\n:::\n:::\n\n\nSo, there are 59 highly studied genes, and another 1308 well-studied genes. Let's take a closer look at these 59 most cited genes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npapers_per_gene |>\n  filter(nb_papers >= 250) |>\n  pull(gene_name)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"daf-16\"  \"daf-2\"   \"glp-1\"   \"ced-3\"   \"skn-1\"   \"lin-12\"  \"age-1\"  \n [8] \"let-60\"  \"unc-54\"  \"ced-4\"   \"daf-12\"  \"let-23\"  \"daf-7\"   \"let-7\"  \n[15] \"mab-5\"   \"unc-6\"   \"egl-1\"   \"tra-1\"   \"fem-3\"   \"lin-4\"   \"ced-9\"  \n[22] \"tra-2\"   \"unc-13\"  \"unc-22\"  \"lin-14\"  \"gld-1\"   \"lin-3\"   \"mec-4\"  \n[29] \"mpk-1\"   \"sod-3\"   \"goa-1\"   \"rol-6\"   \"unc-5\"   \"lin-15B\" \"lin-39\" \n[36] \"par-3\"   \"daf-4\"   \"glr-1\"   \"pop-1\"   \"unc-40\"  \"ced-10\"  \"lin-15A\"\n[43] \"par-2\"   \"pie-1\"   \"fem-1\"   \"unc-104\" \"clk-1\"   \"hsf-1\"   \"unc-4\"  \n[50] \"ced-1\"   \"egl-5\"   \"par-1\"   \"lin-28\"  \"myo-3\"   \"tax-4\"   \"unc-86\" \n[57] \"lin-17\"  \"unc-29\"  \"her-1\"  \n```\n:::\n:::\n\n\n\n## By tissue type\n\nLet's say I'm more interested in neuronal genes that are highly studied. One way to implement such a restriction is to look at which tissue each gene is supposedly expressed in.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimplemine_results |>\n  mutate(is_neuronal = str_detect(expr_pattern, \"neuron\")) |>\n  filter(is_neuronal) |>\n  separate_rows(references, sep = \",\") |>\n  filter(!is.na(references)) |>\n  group_by(gene_id, gene_name) |>\n  summarize(nb_papers = n(),\n            .groups = \"drop\") |>\n  arrange(desc(nb_papers)) |>\n  filter(nb_papers >= 250) |>\n  select(gene_name, nb_papers) |>\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|gene_name | nb_papers|\n|:---------|---------:|\n|daf-16    |      1675|\n|daf-2     |      1543|\n|glp-1     |       838|\n|skn-1     |       695|\n|lin-12    |       685|\n|age-1     |       595|\n|let-60    |       566|\n|ced-4     |       502|\n|daf-12    |       496|\n|let-23    |       490|\n|daf-7     |       455|\n|let-7     |       447|\n|mab-5     |       423|\n|unc-6     |       400|\n|tra-1     |       390|\n|lin-4     |       386|\n|unc-13    |       368|\n|lin-14    |       358|\n|gld-1     |       355|\n|mec-4     |       347|\n|mpk-1     |       343|\n|goa-1     |       340|\n|unc-5     |       328|\n|lin-15B   |       322|\n|lin-39    |       321|\n|daf-4     |       319|\n|glr-1     |       316|\n|pop-1     |       308|\n|unc-40    |       305|\n|unc-104   |       287|\n|hsf-1     |       282|\n|unc-4     |       281|\n|ced-1     |       280|\n|egl-5     |       266|\n|par-1     |       266|\n|lin-28    |       265|\n|tax-4     |       263|\n|unc-86    |       261|\n|lin-17    |       258|\n|unc-29    |       256|\n:::\n:::\n\n\n## Limitations\n\nFirst, we are interested in most studied genes, but we only looked at the most cited genes. For example, *unc-54* is highly cited, but that may be largely due to its use in transgenes.\n\nSecond, if we are interested in genes studied for their role in a given tissue (e.g. neurons), we would need a classification of the papers they're cited in. Here, we rely on (sometimes imprecise) annotations of tissues where a gene is expressed. For example, *daf-16* is expressed in neurons, and has been largely studied in all tissues, so it appears as the top hit.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}